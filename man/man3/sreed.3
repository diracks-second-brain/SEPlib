net::koko::srcn:e:to:u:rk:o:ksoe:p:lsirbc-:6:.o1Su:Er:P:dl:oiscbesp:Ml:aipnbou-da6:l.:1sP:ea:pgdleoiscbs_:b:apsoed::::ssreepeldi(b3_)base::sreed(3)



NNAAMMEE
       sreed - read in an array from a seplib file

SSYYNNOOPPSSIISS
       "int sreed(tag, buffer, nbytes)"

IINNPPUUTT PPAARRAAMMEETTEERRSS
       char*-  tag
                 tag of history file

       int -   nbytes
                 number of bytes to be written

OOUUTTPPUUTT PPAARRAAMMEETTEERRSS
       void*-  buffer
                 values to be written

RREETTUURRNN VVAALLUUEESS
           n = number of bytes read

DDEESSCCRRIIPPTTIIOONN
       Reads data from dataset attached to given tag

CCOOMMMMEENNTTSS
       The tag argument is either the string "in" or any tag appropriate for
       use with _a_u_x_i_n_(_).  This means either an explicit filename or a command
       line redirect parameter tag=filename.  Buffer is the location of con-
       tiguous bytes into which the input will be placed. Unless an end of
       file or I/O error is encountered, it is guaranteed that all nbytes
       bytes will be read; this is true even for terminals and pipes. In any
       event the number of characters read is returned.

       sreed and srite perform conversions from machine independent external
       data formats to the internal data representation. This is controlled by
       the "data_format" keyword in the header file. The valid types are
       "xdr_float", "xdr_integer", "xdr_byte" and "native". If the keyword is
       not found the native format is assumed.

       If the internal representation is larger than the representation of the
       external data then you must be careful to make the buffer the correct
       size for the converted data.  e.g. on a cray system when reading
       xdr_float data, nbytes refers to the number of bytes to be read.  This
       will be in 4-byte xdr_floats, but the internal storage will be in
       8-byte cray floats, so the buffer must be 2*nbytes long.

       _s_r_e_e_d___r_a_w_(_) just reads the raw bytes with no conversion. The buffer
       size and nbytes are the same in this case.

       If the returned value is 0, then end-of-file has been reached.

SSEEEE AALLSSOO
       seplib, file, srite, auxclose, auxpar

DDIIAAGGNNOOSSTTIICCSS
       If an end of file is reached, the returned byte count may be less than
       the requested amount.  The next call will return zero.  If the read was
       otherwise unsuccessful the program will be terminated via _s_e_p_e_r_r_(_).
       Many conditions can generate an error: physical I/O errors, bad buffer
       address, preposterous nbytes, file tag not that of an input file.

BBUUGGSS
KKEEYYWWOORRDDSS
       read input xdr

LLIIBBRRAARRYY
       sseepp



6.0          net::koko::srcT:h:uouFre:b:s1e2pl1i6b:-068.:10:8:d2o0c0s4::pod::seplib_base::sreed(3)
